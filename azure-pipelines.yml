# azure-pipelines.yml
# This file will be stored in the root of your GitHub repository.

# Trigger the pipeline on pushes to the 'main' branch
trigger:
- main

# Use a Microsoft-hosted Linux agent (Ubuntu) for the build environment
pool:
  vmImage: 'ubuntu-latest'

variables:
  python.version: '3.9' # Specify the Python version for your tests

steps:
# Task: UsePythonVersion - displayName is a property of the task
- task: UsePythonVersion@0
  displayName: 'Install Python $(python.version)'
  inputs:
    versionSpec: '$(python.version)'

# Script Step: Install dependencies - script comes before displayName
- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies from requirements.txt' # displayName now after script

# Script Step: Install Playwright Browsers - script comes before displayName
- script: |
    playwright install --with-deps
  displayName: 'Install Playwright Browsers' # displayName now after script

# Script Step: Run Pytest Tests - script comes before displayName
- script: |
    pytest tests/steps/ -v --html=test_report.html --self-contained-html --durations=10 --junitxml=junit_results.xml
  displayName: 'Run Pytest Tests' # displayName now after script

# Task: Publish Test Results - displayName is a property of the task
- task: PublishTestResults@2
  displayName: 'Publish Test Results to Azure DevOps'
  condition: succeededOrFailed()
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: 'junit_results.xml'
    testRunTitle: 'Playwright E2E Tests'

# Task: Publish HTML Test Report - displayName is a property of the task
- task: PublishBuildArtifacts@1
  displayName: 'Publish HTML Test Report as Artifact'
  condition: succeededOrFailed()
  inputs:
    artifactName: 'TestReports'
    pathToPublish: 'test_report.html'
    publishLocation: 'container'